language: cpp

stages:
  - Build
  - Test

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew outdated cmake; brew upgrade cmake gcc; brew install gcovr --overwrite; fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get update -qq
        while [ $? -ne 0 ]; do
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
            sudo apt-get update -qq
        done
    fi
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-add-repository "deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-6.0 main"
        sudo apt-get update
        sudo apt-get install -y clang-6.0
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo pip install codecov; fi

install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install g++-8 clang-6.0 -y; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-6.0 90; fi

jobs:
  include:
    - stage: Build
    - script:
        - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
        - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
        - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
        - make 

    - os: linux
      compiler: gcc
      env: BUILD_OPTIONS=COMPILE BUILD_TYPE=DEBUG
      script:
        - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
        - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
        - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
        - make 


    - os: linux
      compiler: gcc
      env: BUILD_OPTIONS=TEST BUILD_TYPE=DEBUG
      script:
        - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
        - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
        - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
        - make 


    - os: linux
      compiler: clang
      env: BUILD_OPTIONS=COMPILE BUILD_TYPE=DEBUG
      script:
        - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
        - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
        - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
        - make 


    - os: linux
      compiler: clang
      env: BUILD_OPTIONS=TEST BUILD_TYPE=DEBUG
      script:
        - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
        - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
        - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
        - make 


    # Release Builds
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=RELEASE
      script:
        - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
        - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
        - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
        - make 

   
    - os: linux
      compiler: clang
      env: BUILD_TYPE=RELEASE
      script:
        - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
        - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
        - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
        - make 


    # OSX Builds
    - os: osx
      env: BUILD_OPTIONS=COMPILE BUILD_TYPE=DEBUG
      script:
        - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
        - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
        - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
        - make 


    - os: osx
      env: BUILD_OPTIONS=TEST BUILD_TYPE=DEBUG
      script:
        - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
        - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
        - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
        - make 

    - stage: Test

    - os: linux
      compiler: gcc
      env: BUILD_OPTIONS=TEST BUILD_TYPE=DEBUG COVERAGE=TRUE
    - script:
      - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
      - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
      - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
      - make 
      - |
        if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$BUILD_OPTIONS" = "TEST" ]; then
            find ./CMakeFiles -name "*.gcno" -exec mv -t . {} \;
            find bin/tests/ -type f -exec {} \;
            find ./CMakeFiles -name "*.gcda"  -exec mv -t . {} \;
            ./run_gcov.sh;
        fi

    - os: linux
      compiler: clang
      env: BUILD_OPTIONS=TEST BUILD_TYPE=DEBUG
    - script:
      - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
      - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
      - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
      - make 
      - |
        if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$BUILD_OPTIONS" = "TEST" ]; then
            find ./CMakeFiles -name "*.gcno" -exec mv -t . {} \;
            find bin/tests/ -type f -exec {} \;
            find ./CMakeFiles -name "*.gcda"  -exec mv -t . {} \;
            ./run_gcov.sh;
        fi

    - os: osx
      env: BUILD_OPTIONS=TEST BUILD_TYPE=DEBUG
    - script:
      - if [ -z "$BUILD_OPTIONS" ]; then cmake . -DCMAKE_BUILD_TYPE="$BUILD_TYPE"; fi
      - if [ "$BUILD_OPTIONS" = "COMPILE" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug; fi
      - if [ "$BUILD_OPTIONS" = "TEST" ]; then cmake . -DCMAKE_BUILD_TYPE=Debug -DTESTING=TRUE; fi
      - make 
      - |
        if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$BUILD_OPTIONS" = "TEST" ]; then
            find ./CMakeFiles -name "*.gcno" -exec mv -t . {} \;
            find bin/tests/ -type f -exec {} \;
            find ./CMakeFiles -name "*.gcda"  -exec mv -t . {} \;
            ./run_gcov.sh;
        fi


  allow_failures:
    - os: osx
    - compiler: clang
    - env: BUILD_OPTIONS=BENCHMARK

after_success:
  - if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$COVERAGE" = "TRUE" ]; then bash <(curl -s https://codecov.io/bash) -t 42a329d2-3928-468b-80d4-6af2e4254968; fi
  
